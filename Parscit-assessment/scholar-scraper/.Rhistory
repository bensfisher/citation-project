range_tradebal = seq(min(data$tradebal), max(data$tradebal))
trade_psi = (interaction_trade$coef[2] +
(range_tradebal * interaction_trade$coef[4]))
trade_se = sqrt(vcov(interaction_trade)[2,2] +
(range_tradebal)^2*vcov(interaction_trade)[4,4] +
2*range_tradebal*vcov(interaction_trade)[2,4])
rm(list=ls())
setwd('~/Desktop/Dissertation/Second Article/')
library(dplyr)
library(DataCombine)
library(pROC)
library(ROCR)
library(caret)
library(edarf)
library(randomForest)
library(randomForestSRC)
library(reshape2)
set.seed(1989)
load('results.RData')
?table
table(rf.probs, test$MA)
?confusionMatrix
confusionMatrix(rf.probs, test$MAc)
confusionMatrix(rf.probs, test$MA)
?xtabs
xtab = table(rf.probs, test$MA, .3)
xtab = table(rf.probs, test$MA)
table(rf.probs<.5, test$MA)
summary(test$MA)
sum(test$MA)
table(rf.probs>=.5, test$MA)
table(rf.probs>=.3, test$MA)
table(rf.probs>=.1, test$MA)
table(rf.probs>=.05, test$MA)
table(rf.probs>=.02, test$MA)
table(rf.probs>=.01, test$MA)
table(rf.probs>=.001, test$MA)
426/517
13177/426
table(rf.probs>=.0015, test$MA)
392/517
10478/392
mean(rf.probs)
summary(rf.probs)
table(rf.probs>=.001, test$MA)
13177/426
table(rf.probs>=.002, test$MA)
table(rf.probs>=.004, test$MA)
7965/346
table(rf.probs>=.006, test$MA)
table(rf.probs>=.01, test$MA)
278/5137
5137/278
table(rf.probs>=.015, test$MA)
table(rf.probs>=.013, test$MA)
table(rf.probs>=.014, test$MA)
4243/257
colnames(test)
test$probs = rf.probs
unique(test$gwno)
library(countrycode)
install.packages('countrycode')
library(countrycode)
?countrycode
head(arrange(test, desc(rf.probs)))
head(arrange(test, desc(rf.probs)), 10)
check = filter(test, halfyear==20142)
head(arrange(check, desc(rf.probs)), 10)
head(arrange(check, desc(rf.probs)))
View(check)
head(arrange(check, desc(probs)), 10)
check = filter(check, gwno==651 | gwno==490 | gwno==620 | gwno==626 | gwno==625)
egypt = filter(check, gwno==651)
libya = filter(check, gwno==620)
sudan = filter(check, gwno==625)
ssudan = filter(check, gwno==626)
drc = filter(check, gwno==490)
summary(egypt$probs)
summary(libya$probs)
summary(sudan$probs)
summary(ssudan$probs)
summary(drc$probs)
check = cbind(egypt, libya, sudan, ssudan, drc)
df = data.frame()
df$Egypt = egypt$probs
check = select(check, gwno, probs)
check$Country = "Egypt"
check$Countr[check$gwno==620] = 'Libya'
check$Country[check$gwno==620] = 'Libya'
check$Country[check$gwno==625] = 'Sudan'
check$Country[check$gwno==626] = 'South Sudan'
check$Country[check$gwno==490] = 'DRC'
check$Countr = NULL
unique(check$Country)
check = melt(check, id.vars='Country')
check = filter(test, halfyear==20142)
check = filter(check, gwno==651 | gwno==490 | gwno==620 | gwno==626 | gwno==625)
check = select(check, gwno, probs)
check$Country = "Egypt"
check$Country[check$gwno==620] = 'Libya'
check$Country[check$gwno==625] = 'Sudan'
check$Country[check$gwno==626] = 'South Sudan'
check$Country[check$gwno==490] = 'DRC'
check$gwno = NULL
check = melt(check, id.vars='Country')
ggplot(check, aes(factor(Country), probs)) + geom_boxplot()
check = filter(test, halfyear==20142)
check = filter(check, gwno==651 | gwno==490 | gwno==620 | gwno==626 | gwno==625)
check = select(check, gwno, probs)
check$Country = "Egypt"
check$Country[check$gwno==620] = 'Libya'
check$Country[check$gwno==625] = 'Sudan'
check$Country[check$gwno==626] = 'South Sudan'
check$Country[check$gwno==490] = 'DRC'
check$gwno = NULL
ggplot(check, aes(factor(Country), probs)) + geom_boxplot()
summary(check$Country)
summary(as.factor(check$Country))
ggplot(check, aes(factor(Country), probs)) + geom_boxplot() + labs(x="Country", y="Predicted Probability")
setwd('~/citation-project/Parscit-assessment/scholar-scraper/')
install.packages('RefManageR')
bib_cites = ReadBib('gscholar_out2.bib')
library(RefManageR)
bib_cites = ReadBib('gscholar_out2.bib')
bib_dat = as.data.frame(bib_cites)
View(bib_dat)
file.list = list.files(path=".", pattern=".bib")
file.list
df = data.frame()
file.list[1]
df = data.frame()
for (i in 1:len(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
bib_cites = ReadBib(file.list[1])
bib_cites = ReadBib(file.list[2])
bib_cites = ReadBib(file.list[2])
bib_cites = ReadBib(file.list[2])
bib_cites = ReadBib(file.list[3])
bib_cites = ReadBib(file.list[4])
bib_cites = ReadBib(file.list[5])
bib_cites = ReadBib(file.list[6])
file.list = list.files(path=".", pattern=".bib")
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[2])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
write.csv(df, "bib_frame.csv")
bib_cites = ReadBib(file.list[1])
bib_dat = as.data.frame(bib_cites)
View(bib_dat)
file.list = list.files(path=".", pattern=".bib")
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
View(df)
write.csv(df, "bib_frame.csv")
rm(bib_dat)
rm(bib_cites)
rm(file.list)
rm(i)
yearly = read.csv('~/Desktop/Dissertation/First Article/Data/fe_data.csv')
setwd('~/citation-project/Parscit-assessment/scholar-scraper/')
library(RefManageR)
file.list = list.files(path=".", pattern=".bib")
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
write.csv(df, "bib_frame.csv")
View(df)
setwd('~/citation-project/Parscit-assessment/scholar-scraper/')
library(RefManageR)
file.list = list.files(path=".", pattern=".bib")
df = data.frame()
bib_cites = ReadBib(file.list[1])
bib_dat = as.data.frame(bib_cites)
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i)
bib_dat = as.data.frame(bib_cites)
print(ncol(bib_dat))
#df = rbind(df, bib_dat)
}
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
print(ncol(bib_dat))
#df = rbind(df, bib_dat)
}
bib_cites = ReadBib(file.list[2])
bib_dat = as.data.frame(bib_cites)
View(bib_dat)
file.list
file.list = list.files(path=".", pattern="gscholar_out")
file.list
file.list = list.files(path=".", pattern="gscholar_out")
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[2])
bib_dat = as.data.frame(bib_cites)
print(ncol(bib_dat))
}
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[2])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
write.csv(df, "bib_frame.csv")
View(df)
setwd('~/citation-project/Parscit-assessment/scholar-scraper/')
library(RefManageR)
file.list = list.files(path=".", pattern="gscholar_out")
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
df = rbind(df, bib_dat)
}
write.csv(df, "bib_frame.csv")
file.list
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
ncol(bib_dat)
#df = rbind(df, bib_dat)
}
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
print(ncol(bib_dat))
#df = rbind(df, bib_dat)
}
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[3])
bib_dat = as.data.frame(bib_cites)
}
View(bib_dat)
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[3])
bib_dat = as.data.frame(bib_cites)
bib_dat = bib_dat[c(1:9)]
df = rbind(df, bib_dat)
}
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
bib_dat = bib_dat[c(1:9)]
df = rbind(df, bib_dat)
}
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
bib_dat = bib_dat[c(1:9)]
df = rbind(df, bib_dat)
}
df = data.frame()
for (i in 1:length(file.list)){
bib_cites = ReadBib(file.list[i])
bib_dat = as.data.frame(bib_cites)
bib_dat = bib_dat[c(1:9)]
df = rbind(df, bib_dat)
}
write.csv(df, "bib_frame.csv")
bib_cites = ReadBib('savedrecs-2.bib')
df = as.data.frame(bib_cites)
View(df)
write.csv(df, "wos_bib_frame.csv")
